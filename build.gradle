plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.1'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.mrrolbot'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.flywaydb:flyway-core'
	implementation 'org.flywaydb:flyway-database-postgresql'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	runtimeOnly 'org.postgresql:postgresql'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.register("installFrontend", Exec) {
	inputs.file("frontend/yarn.lock")
	inputs.file("frontend/package.json")
	inputs.file("frontend/tsconfig.json")
	outputs.dir("frontend/node_modules")

	workingDir "frontend"
	executable "yarn"
	args "install", "--update-checksums"
}

tasks.register("buildFrontend", Exec) {
	dependsOn installFrontend
	inputs.files(file("frontend").listFiles({file -> file.name != "dist"} as FileFilter))
	outputs.dir("frontend/dist")

	workingDir "frontend"
	executable "yarn"
	args "build"
}

tasks.register("copyFrontend", Copy) {
	from buildFrontend.outputs
	into "$buildDir/resources/main/static"
	doLast {
		println "copied frontend artifacts to $buildDir/resources/main/static"
	}
}

tasks.register("cleanFrontend", Delete) {
	delete "frontend/dist", "$buildDir/resources/main/static"
	doLast {
		print "deleted frontend artifacts"
	}
}


bootRun {
	dependsOn copyFrontend
}

jar {
	dependsOn copyFrontend
}

build {
	dependsOn copyFrontend
}

clean {
	dependsOn cleanFrontend
}

resolveMainClassName {
	dependsOn copyFrontend
}

test {
	useJUnitPlatform()
}

compileTestJava {
	dependsOn copyFrontend
}
